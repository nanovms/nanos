version: 2
jobs:
  build:
    docker:
      # specify the version
      - image: circleci/golang:1.12
    steps:
      - checkout
      - run: sudo apt-get update
      - run: sudo apt-get install nasm qemu-system-x86 ent ruby rustc
      - run: cd .. && git clone git@github.com:nanovms/ops.git
      - run: make
      - run: curl https://ops.city/get.sh -sSfL | sh
      - run:
          command: |
            OPS_DIR=$HOME/.ops
            PATH=$HOME/.ops/bin:$PATH
            make test-noaccel

  nightly-build:
    docker:
      - image: circleci/golang:1.12
    steps:
      - checkout
      - run: sudo apt-get update
      - run: sudo apt-get install nasm qemu-system-x86 ent ruby rustc
      - run: make
      - run: curl https://ops.city/get.sh -sSfL | sh
      - run:
          command: |
            OPS_DIR=$HOME/.ops
            PATH=$HOME/.ops/bin:$PATH
            make test-noaccel

      - run: echo "deb http://packages.cloud.google.com/apt cloud-sdk-jessie main" | sudo tee -a /etc/apt/sources.list.d/google-cloud-sdk.list
      - run: curl https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key add -
      - run: sudo apt-get update && sudo apt-get install google-cloud-sdk

      - run: echo $GCLOUD_SERVICE_KEY | gcloud auth activate-service-account --key-file=-
      - run: sudo gcloud config set project ${GOOGLE_PROJECT_ID}
      - run: gcloud --quiet config set compute/zone ${GOOGLE_COMPUTE_ZONE}

      - run: mkdir temp && cp output/stage3/bin/stage3.img temp/ && cp output/boot/boot.img temp/ && cp output/mkfs/bin/mkfs temp/
      - run: cd temp && tar cvzf nanos-nightly-linux.tar.gz * && gsutil cp nanos-nightly-linux.tar.gz gs://nanos/release/nightly
      - run: gsutil acl ch -u AllUsers:R gs://nanos/release/nightly/nanos-nightly-linux.tar.gz
      - run: rm -r temp
      - run: echo $(date +"%m%d%Y") > nanos-nightly-linux.timestamp
      - run: gsutil cp nanos-nightly-linux.timestamp gs://nanos/release/nightly
      - run: gsutil acl ch -u AllUsers:R gs://nanos/release/nightly/nanos-nightly-linux.timestamp
   
  build-mac:
    macos:
        xcode: "9.0" 
    steps:
      - checkout
      - run: CI=1 /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install.sh)"
      - run: brew update && brew install nasm go wget qemu ent
      - run: brew tap nanovms/homebrew-x86_64-elf
      - run: brew install x86_64-elf-binutils
      - run: mkdir target-root && cd target-root && wget https://storage.googleapis.com/testmisc/target-root.tar.gz && tar xfvz target-root.tar.gz
      - run: curl https://ops.city/get.sh -sSfL | sh
      - run: 
          name: macbuild
          environment:
            NANOS_TARGET_ROOT: target-root
          command: |
            OPS_DIR=$HOME/.ops
            PATH=$HOME/.ops/bin:$PATH
            make test-noaccel
  
  nightly-build-mac:
    macos:
        xcode: "9.0" 
    steps:
      - checkout
      - run: CI=1 /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install.sh)"
      - run: brew update && brew install nasm go wget ent
      - run: brew tap nanovms/homebrew-x86_64-elf
      - run: brew install x86_64-elf-binutils
      - run: mkdir target-root && cd target-root && wget https://storage.googleapis.com/testmisc/target-root.tar.gz && tar xzf target-root.tar.gz
      - run: 
          name: macbuild
          environment:
            NANOS_TARGET_ROOT: target-root
          command: make
      - run: brew upgrade python
      - run: curl -O https://dl.google.com/dl/cloudsdk/channels/rapid/downloads/google-cloud-sdk-240.0.0-darwin-x86_64.tar.gz
      - run: tar xzf google-cloud-sdk*.tar.gz
      - run: ./google-cloud-sdk/install.sh -q
      - run: source /Users/distiller/project/google-cloud-sdk/path.bash.inc && echo export PATH=$PATH > $BASH_ENV
      - run: echo $GCLOUD_SERVICE_KEY | gcloud auth activate-service-account --key-file=-
      - run: sudo gcloud config set project ${GOOGLE_PROJECT_ID}
      - run: gcloud --quiet config set compute/zone ${GOOGLE_COMPUTE_ZONE}

      - run: mkdir temp && cp output/stage3/bin/stage3.img temp/ && cp output/boot/boot.img temp/ && cp output/mkfs/bin/mkfs temp/
      - run: cd temp && tar cvzf nanos-nightly-darwin.tar.gz * && gsutil cp nanos-nightly-darwin.tar.gz gs://nanos/release/nightly
      - run: gsutil acl ch -u AllUsers:R gs://nanos/release/nightly/nanos-nightly-darwin.tar.gz
      - run: rm -r temp
      - run: echo $(date +"%m%d%Y") > nanos-nightly-darwin.timestamp
      - run: gsutil cp nanos-nightly-darwin.timestamp gs://nanos/release/nightly
      - run: gsutil acl ch -u AllUsers:R gs://nanos/release/nightly/nanos-nightly-darwin.timestamp

workflows:
  version: 2
  commit-workflow:
    jobs:
      - build
  nightly:
    triggers:
      - schedule:
          cron: "0 2 * * *" # 7PM PST
          filters:
            branches:
              only:
                - master
    jobs:
      - nightly-build
      - nightly-build-mac
